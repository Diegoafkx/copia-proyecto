/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.de.bioinform√°tica;
import Estructura_de_datos.ArbolBinarioDeBusqueda;
import Estructura_de_datos.patronADN;
import Estructura_de_datos.Nodo;
import java.util.Enumeration;
import java.util.Hashtable;
/**
 *
 * @author Diego Arreaza y Vyckhy Sarmiento
 */
public class Ventana1 extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Ventana1.class.getName());
    /**
     * String con la cadena de adn de la cadena de texto
     */
    private static String cadena;
    /**
     * Hashtable que tiene de key la tripleta y de valor un dato patronADN 
     */
    private Hashtable<String, patronADN> tripleta;
    /**
     * Matriz que contiene de materna organizada los keys del hashtable
     */
    String[] tripleta_ordenada;
    /**
     * 
     */
    ArbolBinarioDeBusqueda arbol;
    /**
     * Creates new form Ventana1
     * @param c cadena de ADN
     */
    public Ventana1(String c) {
        cadena = c;
        initComponents();
        this.CrearhashTable();
        this.organizar_posiciones();
        this.Crear_arbol_binario_de_busqueda();
        this.setVisible(true);
    }
    
    /**
     * Metodo que se encarga de crear el hashtable con las tripletas de adn
     * Revisa si la tripleta se encuentra dentro del Hash, si se encuentraa se aumenta su frecuencia y se coloca la posicion y si no se agrega en el hastable
     */
    private void CrearhashTable(){
        tripleta = new Hashtable<>();
        for (int i = 0; i < cadena.length(); i=i+3) {
            if (i >=cadena.length()) {
                return;
            }
            String aux = String.valueOf(cadena.charAt(i))+ String.valueOf(cadena.charAt(i+1))+ String.valueOf(cadena.charAt(i+2));
            if (tripleta.containsKey(aux)==true) {
                tripleta.get(aux).agregarPosicion(i);
                tripleta.get(aux).incrementarFrecuencia();
            }else{
                patronADN adn= new patronADN(aux,i);
                tripleta.put(aux,adn );
            }
        }
    }
    
    /**
     * metodo que se encarga de organizar el hashtable por orden de frecuendia en una matriz para la creacion del arbol de busqueda
     */
    private void organizar_posiciones(){
        tripleta_ordenada = new String[tripleta.size()];
        
        int i = 0;
        int x =0;
        Enumeration<String> keys = tripleta.keys();
        String key = keys.nextElement();
        int menor = ((patronADN) tripleta.get(key)).getFrecuencia();
        String adn = key;
        
        while(tripleta_ordenada[tripleta.size()-1] == null){  
            
            if(i == tripleta.size()-1){
                keys = tripleta.keys();
                tripleta_ordenada[x] = adn;
                x++;
                i=0;
                menor=menor+1;
            }
            key = keys.nextElement();
            if(((patronADN) tripleta.get(key)).getFrecuencia()<= menor){
                boolean buscador = false;
                for (int j = 0; tripleta_ordenada[j]!=null; j++) {
                    if (tripleta_ordenada[j]==key) {
                       buscador = true;
                       break;
                    }
                }
                if (buscador ==false) {
                    menor = ((patronADN) tripleta.get(key)).getFrecuencia();
                    adn = key;
                }
            }
            i++;
        }
    }
    private void Crear_arbol_binario_de_busqueda(){
        arbol = new ArbolBinarioDeBusqueda();
        int posicion_raiz = (int) (tripleta.size()-1)/2;
        Nodo aux = new Nodo(tripleta.get(tripleta_ordenada[posicion_raiz]));
        arbol.setRoot(aux);
        for (int i = 0; tripleta.size() < 10; i++) {
            if(i != posicion_raiz){
                aux = new Nodo(tripleta.get(tripleta_ordenada[i]));
                
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 530, 70));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 530, 70));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, 530, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 610));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    chocolate1 nuevaVentana = new chocolate1();
    nuevaVentana.setVisible(true);
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    duende2 nuevaVentanaDuende = new duende2(); 
    nuevaVentanaDuende.setVisible(true);
    this.dispose(); 

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        lol3 ventanaXD = new lol3();
        ventanaXD.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Ventana1(cadena).setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
